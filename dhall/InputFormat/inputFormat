let Order =
        ../Internal/InputFormat/Order sha256:77ea7cca209ab0ef9afd003a580efa8aba29cf572cbe095698679fb25a96d24c
      ? ../Internal/InputFormat/Order

let Separator =
        ../Internal/InputFormat/Separator sha256:0e5d8464af2df9c7ffae603f39803634d3dcecb28de50af26875820a1074c36d
      ? ../Internal/InputFormat/Separator

let SeparatorRequirement =
        ../Internal/InputFormat/SeparatorRequirement sha256:047b627a9979b467750a376b4f61681cd1071d132c71007fcd2f7a00df993a17
      ? ../Internal/InputFormat/SeparatorRequirement

let TaggedValueFormat =
        ../Internal/InputFormat/TaggedValueFormat sha256:62b80103bf88b5ca5f35005b578267a5679fdbdcfb0b77229c3651b882961551
      ? ../Internal/InputFormat/TaggedValueFormat

in  λ(openingSeparator : Separator) →
    λ(tagSeparator : Separator) →
    λ(closingSeparator : Separator) →
      { tagOrder = Order.NameTagsExtension
      , openingSeparator
      , leadingTagSeparator = SeparatorRequirement.Optional
      , tagSeparator
      , taggedValueFormat = None TaggedValueFormat
      , trailingTagSeparator = SeparatorRequirement.Optional
      , closingSeparator
      }
